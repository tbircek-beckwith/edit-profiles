
********************************************
***** Please do not  modify this file. *****
********************************************

Find what:
/select ip22,1032,4088,1033,4,1016,7|/select ip22,8725,0,8726,81,8728,11500,8729,20,8727,1|/select ip22,8725,0,8726,1,8728,11500,8729,1000,8727,1|removeModule=Set Triple Single 50P.INDSET|removeModule=Set Triple Single 51P.INDSET|removeModule=Set Vz1 Usage|removeModule=Set 3ph 50P.INDSET|removeModule=Set 3ph 51P.INDSET

Replace with:
/select ip22,1033,4,1016,7|/select ip22,8725,0,8726,0,8728,11500,8729,20,8727,1|/select ip22,8725,0,8726,0,8728,11500,8729,1000,8727,1


*******************************************************************************************
*******************************************************************************************
// following output.characteristics update cancelled due to D-0347V03.15.12 firmware update.
// /select ip22,1002,2,1003,2,1004,0,1005,0,1006,2,1007,2,1008,2,1009,2,1010,0,1011,0,1012,0,1013,0

// delete following ExeCute TestModules.
Set Triple Single 50P.INDSET
Set Triple Single 51P.INDSET
Set Vz1 Usage

// EditProfiles commands to process test modules.
removeModule=Set Triple Single 50P.INDSET|removeModule=Set Triple Single 51P.INDSET
//renameModule=Set Triple Single 50P.INDSET|renameModule=Set Triple Single 51P.INDSET

// Not in used.
// updateParams=/select ip22,1032,4088,1033,4,1016,7

goose && (eth.addr == 00:1f:5a:02:01:af || eth.addr == 00:1f:5a:02:00:04 || eth.src == 00:1f:5a:02:00:d4 || eth.addr == 00:1f:5a:02:01:b5 || eth.addr == 00:1f:5a:02:01:b5)

goose.gocbRef == "M7679MET/LLN0$GO$gcST"

**********************************************
******************* NOT USED *****************
**********************************************
using System;
using System.Text.RegularExpressions;

public class Example
{
    public static void Main()
    {
        string pattern = @"(removeModule=|\|)
";
        string input = @"removeModule=Set Triple Single 50P.INDSET|removeModule=Set Triple Single 51P.INDSET";
        
        foreach (Match m in Regex.Matches(input, pattern))
        {
            Console.WriteLine("'{0}' found at index {1}.", m.Value, m.Index);
        }
    }
}
